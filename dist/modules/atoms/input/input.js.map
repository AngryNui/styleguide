{"version":3,"file":"input.js","sources":["../../../../src/modules/atoms/atom.js","../../../../src/modules/atoms/input/input.js"],"sourcesContent":["\nexport default function Atom(options) {\n  const defaults = {\n    selector: 'body',\n    scope: document,\n  };\n\n  this.options = Object.assign({}, defaults, options);\n}\n\nAtom.prototype.subscribe = function subscribe(eventType, parent) {\n  const self = this;\n  const { scope, selector } = self.options;\n\n  const nodes = scope.querySelectorAll(selector);\n\n  nodes.forEach((node) => {\n    node.addEventListener(eventType, (event) => {\n      event.stopPropagation();\n      parent.notify(self, event.type);\n    }, true);\n  });\n};\n","\nimport Atom from '../atom';\n\nexport default function Input(options) {\n  Atom.call(this, options);\n\n  const defaults = {\n    selector: 'input[type=\"text\"]',\n    scope: document,\n  };\n\n  this.options = Object.assign({}, defaults, options);\n}\n\nInput.prototype = Object.create(Atom.prototype);\nInput.prototype.constructor = Input;\n"],"names":["Atom","options","defaults","selector","scope","document","this","Object","assign","Input","call","prototype","subscribe","eventType","parent","self","querySelectorAll","forEach","node","addEventListener","event","stopPropagation","notify","type","create","constructor"],"mappings":"kCACe,SAASA,EAAKC,GAC3B,MAAMC,GACJC,SAAU,OACVC,MAAOC,UAGTC,KAAKL,QAAUM,OAAOC,UAAWN,EAAUD,GCJ9B,SAASQ,EAAMR,GAC5BD,EAAKU,KAAKJ,KAAML,GAEhB,MAAMC,GACJC,SAAU,qBACVC,MAAOC,UAGTC,KAAKL,QAAUM,OAAOC,UAAWN,EAAUD,gEDD7CD,EAAKW,UAAUC,UAAY,SAAmBC,EAAWC,GACvD,MAAMC,EAAOT,MACPF,MAAEA,EAAKD,SAAEA,GAAaY,EAAKd,QAEnBG,EAAMY,iBAAiBb,GAE/Bc,QAASC,IACbA,EAAKC,iBAAiBN,EAAYO,IAChCA,EAAMC,kBACNP,EAAOQ,OAAOP,EAAMK,EAAMG,QACzB,MCNPd,EAAME,UAAYJ,OAAOiB,OAAOxB,EAAKW,WACrCF,EAAME,UAAUc,YAAchB"}